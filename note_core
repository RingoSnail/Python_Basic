5.1 面向过程编程(Procedural Programming)

    面向对象编程(Object-Oriented Programming)
    特征：class object encapsulation inheritance polymorphism

    面向对象的程序设计的核心是对象（上帝式思维），要理解对象为何物，必须把自己当成上帝，上帝眼里世间存在的万物皆为对象，不存在的也可以创造出来。
    面向对象的程序设计好比如来设计西游记，如来要解决的问题是把经书传给东土大唐，
    如来想了想解决这个问题需要四个人：唐僧，沙和尚，猪八戒，孙悟空，每个人都有各自的特征和技能（这就是对象的概念，特征和技能分别对应对象的属性和方法），
    然而这并不好玩，于是如来又安排了一群妖魔鬼怪，为了防止师徒四人在取经路上被搞死，又安排了一群神仙保驾护航，这些都是对象。
    然后取经开始，师徒四人与妖魔鬼怪神仙互相缠斗着直到最后取得真经。如来根本不会管师徒四人按照什么流程去取。

    应用场景：需求经常变化的软件，一般需求的变化都集中在用户层，互联网应用，企业内部软件，游戏等都是面向对象的程序设计大显身手的好地方。

5.5 封装
    封装的优点
    1.良好的封装能够减少耦合。2.类内部的结构可以自由修改。3.可以对成员变量进行更精确的控制。4.隐藏信息，实现细节。

    封装原则
    1.将不需要对外提供的内容都隐藏起来。2.把属性都隐藏，提供公共方法对其访问

    自动变形的特点：
    1.类中定义的x只能在内部使用，如self.x。
    2.这种变形其实正是针对外部的变形，在外部是无法通过__x这个名字访问到的。
    3.在子类定义的x不会覆盖在父类定义的x，因为子类中变形成了：子类名__x,而父类中变形成了：父类名__x，即双下滑线开头的属性在继承给子类时，子类是无法覆盖的。

    变形需要注意的问题：
    1.这种机制也并没有真正意义上限制我们从外部直接访问属性，知道了类名和属性名就可以拼出名字：类名_属性，然后就可以访问了，如a._A__N
    2.变形的过程只在类的内部生效,在实例化后再定义的赋值操作，不会变形

7.2 物理层：    比特流 帧

    数据链路层： MAC   目的MAC(6Byte)+源MAC(6Byte)+数据类型(6Byte)+数据(1500Byte)+校验(4Byte)

    网络层：    IP    IP地址(32bit/4Byte)(分ABCDE) 子网掩码(32bit用于划分网络位)
                     ARP协议获取目标MAC
                     ICMP协议检测网络通畅

    传输层：    端口   建立端口到端口的通信，端口范围0-65535，0-1023为系统占用端口
                     TCP协议可靠传输(源端口目的端口4Byte各种确认共20Byte)
                     UPD协议不可靠传输

    以太网头(IP头(TCP头(数据)))

8.1 计算机硬件-操作系统-用户接口程序-应用程序
    空间复用：内存分为几部分，每部分放入一个程序
    时间复用：I/O时，进程之间分时切换

8.2 程序于进程
    并发与并行 多道与多核

补： 5.7 作业
    6.34
    6.8.23456 8
    7.4567
    8.3 四

