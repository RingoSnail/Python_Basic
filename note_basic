0820-0915 python 13章内容(暂定计划)
讲师：Alex-金角大王
任职：公安部 飞信 中金公司 NOKIA中国研究院 华尔街英语 ADVENT 汽车之家
岗位：网络管理 开发 讲师
“有目标的时候没钱也快乐，没目标的时候有钱也痛苦”

python使用方向：数据分析 爬虫 web开发 机器学习 自动化运维开发 自动化测试 云计算开发
python学习路线：开发基础 核心编程 数据库开发

1.1 机器语言-汇编语言-高级语言
高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行
编译类：先编译成可执行文件 C C++ Delphi
解释类：边解释边执行 Python Java Ruby PHP

1.2 Python 1989年出现 旧版本2.7仍在大量使用
优点：开发效率高 可移植
缺点：慢 线程不能利用多核

1.3 Python环境安装 配置环境变量

1.4 第一个python程序 记事本 win+r cmd 调用

1.5 IDE选用Pycharm 创建Project 添加解释器
    Debug f9 运行 f10 规整代码 alt+shift+enter
    Ctrl + / 快捷注释

1.6 变量 age_of_oldboy = 56
    常量 AGE_OF_OLDBOY = 56
    类 Class OldBoy 驼峰体

1.7 单行注释用#，多行注释可以用三对双引号“”” “””

1.8 基本数据类型 整形int 字符str 浮点float 布尔bool

2 进入赚钱效率高的公司：人少，活少，钱多
  成为复合型人才：主业+英语/编程/金融

2.6 字典
    特性：
    key-value结构
    key必须为不可变数据类型、必须唯一
    value可存放任意多个、可修改、可以不唯一
    无序，不分先后
    查询速度快，且不受dict的大小影响，用hash索引。

2.7 集合
    元素不可变，不能存list、dict 在集合里，字符串、数字、元组等不可变类型可以存
    去重，无序
    基于上面的特性，我们可以用集合来干2件事，去重和关系运算

2.9 字符编码
    ASCII
    GB2312 GBK
    Unicode
    UTF-8

2.11 hash
    一般翻译做散列、杂凑，或音译为哈希，是一种压缩映射
    不可逆，计算极快
    Python 中基于hash的2个数据类型是dict set

2.12 文件操作
    修改文件：文件从硬盘加载到内存，进行增删改查，再写回硬盘

3.10 闭包现象（closure） 在一个函数外部调用其内部函数时，会形成闭包，外部函数的局部变量、参数以及其他内部函数都不会被释放

3.11 软件开发中的一个原则“开放-封闭”原则，简单来说，它规定已经实现的功能代码不应该被修改，但可以被扩展，即：
     封闭：已实现的功能代码块不应该被修改
     开放：对现有功能的扩展开放

3.14 你可能会问，为什么list、dict、str等数据类型不是Iterator？

    这是因为Python的Iterator对象表示的是一个数据流，Iterator对象可以被next()函数调用并不断返回下一个数据，
    直到没有数据时抛出StopIteration错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，
    只能不断通过next()函数实现按需计算下一个数据，所以Iterator的计算是惰性的，只有在需要返回下一个数据时它才会计算。
    Iterator甚至可以表示一个无限大的数据流，例如全体自然数。而使用list是永远不可能存储全体自然数的。

    小结
    凡是可作用于for循环的对象都是Iterable类型；
    凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；
    集合数据类型如list、dict、str等是Iterable但不是Iterator，不过可以通过iter()函数获得一个Iterator对象。

    生成器迭代器的区别:

    迭代器是一个更抽象的概念，任何对象，如果它的类有 next 方法和 iter 方法返回自己本身，对于 string、list、
    dict、tuple 等这类容器对象，使用 for 循环遍历是很方便的。在后台 for 语句对容器对象调用 iter()函数，iter()
    是 python 的内置函数。iter()会返回一个定义了 next()方法的迭代器对象，它在容器中逐个访问容器内元素，next()
    也是 python 的内置函数。在没有后续元素时，next()会抛出一个 StopIteration 异常。

    生成器（Generator）是创建迭代器的简单而强大的工具。它们写起来就像是正规的函数，只是在需要返回数
    据的时候使用 yield 语句。每次 next()被调用时，生成器会返回它脱离的位置（它记忆语句最后一次执行的位置
    和所有的数据值）

    区别：生成器能做到迭代器能做的所有事,而且因为自动创建了 iter()和 next()方法,生成器显得特别简洁,而且
    生成器也是高效的，使用生成器表达式取代列表解析可以同时节省内存。除了创建和保存程序状态的自动方法,当
    发生器终结时,还会自动抛出 StopIteration 异常

    生成器三种方法获取值：
    g.__next__()
    next(g)
    g.send(value)

4.1 路径问题：linux中使用/   windows中使用\   C语言，网络编程中使用\\(因为\为转义符，防止后面的地址被转义)

补： 2.13 股票题 听课
    3.15.13 之后
    4.10 计算器题
    4.13 听课
